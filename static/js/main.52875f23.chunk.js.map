{"version":3,"sources":["components/Header.js","sudokuSolver.js","components/Board.js","components/Footer.js","App.js","index.js"],"names":["Header","isSafe","board","r","c","num","i","sx","sy","x","y","solveSudokuHelper","sudokuSolver","Board","props","className","myBoard","map","val","j","Footer","App","useState","Array","fill","setMyBoard","difficulty","setDifficulty","style","fontWeight","type","name","onClick","console","log","axios","get","params","then","response","data","length","catch","err","error","getSolvedBoard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52875f23.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Sudoku Sovler</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const isSafe = (board, r, c, num) => {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (board[i][c] === num || board[r][i] === num)\r\n            return false\r\n    }\r\n\r\n    let sx = r - r % 3\r\n    let sy = c - c % 3\r\n\r\n    // check in sub-grid\r\n    for (let x = sx; x < sx + 3; x++) {\r\n        for (let y = sy; y < sy + 3; y++) {\r\n            if (board[x][y] === num)\r\n                return false\r\n        }\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nconst solveSudokuHelper = (board, r, c) => {\r\n    // base case\r\n    if (r === 9) {\r\n        return true\r\n    } if (c === 9) {\r\n        return solveSudokuHelper(board, r + 1, 0)\r\n    }\r\n    // pre-filled cell, skip it\r\n    if (board[r][c] !== 0) {\r\n        return solveSudokuHelper(board, r, c + 1)\r\n    }\r\n\r\n    // brute-force\r\n    for (let i = 1; i <= 9; i++) {\r\n        if (isSafe(board, r, c, i)) {\r\n            board[r][c] = i\r\n            let success = solveSudokuHelper(board, r, c + 1)\r\n            if (success === true) {\r\n                return true\r\n            }\r\n            // back-track\r\n            board[r][c] = 0\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nconst sudokuSolver = (board) => {\r\n    solveSudokuHelper(board, 0, 0)\r\n    return board\r\n}\r\n\r\nexport default sudokuSolver","import React from 'react'\r\n\r\nconst Board = (props) => {\r\n    return (\r\n        <div className=\"board\">\r\n            {props.myBoard.map((val, i) => (\r\n                <div key={i} className=\"row\">\r\n                    {val.map((num, j) => {\r\n                        return (\r\n                            <div key={i + j + 1}\r\n                                className='col'>\r\n                                {num ? <h3>{num}</h3> : <></>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            Built with ‚ù§ using React JS\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\nimport Header from './components/Header'\nimport axios from 'axios'\nimport sudokuSolver from './sudokuSolver'\nimport Board from './components/Board'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [myBoard, setMyBoard] = useState(Array(9).fill(null).map(() => Array(9).fill(null)))\n  const [difficulty, setDifficulty] = useState('easy')\n  const getBoard = () => {\n    console.log(difficulty)\n    axios.get('https://sugoku.herokuapp.com/board', {\n      params: {\n        difficulty: difficulty\n      }\n    })\n      .then((response) => {\n        const board = response.data.board\n        for (let i = 0; i < board.length; i++) {\n          for (let j = 0; j < board.length[i]; j++) {\n            console.log(board[i][j])\n            if (board[i][j] === 0)\n              board[i][j] = null;\n          }\n        }\n        // console.log(board)\n        setMyBoard([...board])\n      }).catch((err) => console.error(err))\n  }\n\n  const solveSudoku = () => {\n    const getSolvedBoard = sudokuSolver(myBoard)\n    // console.log(getSolvedBoard)\n    setMyBoard([...getSolvedBoard])\n  }\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Board myBoard={myBoard} />\n        <div className=\"options\">\n          <div style={{ fontWeight: \"bolder\" }}>Difficulty:</div>\n          <div>\n            <input type=\"radio\" name=\"1\" onClick={() => setDifficulty('easy')} /> Easy\n          </div>\n          <div>\n            <input type=\"radio\" name=\"1\" onClick={() => setDifficulty('medium')} /> Medium\n          </div>\n          <div>\n            <input type=\"radio\" name=\"1\" onClick={() => setDifficulty('hard')} /> Hard\n          </div>\n          <div>\n            <input type=\"radio\" name=\"1\" onClick={() => setDifficulty('random')} /> Random\n          </div>\n        </div>\n        <div className=\"btn-container\">\n          <button className=\"get-btn\" onClick={getBoard}>Get Board</button>\n          <br />\n          <button className=\"solve-btn\" onClick={solveSudoku}>Solve</button>\n        </div>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}